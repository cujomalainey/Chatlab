package ca.Skrundz.Communications;

import java.io.IOException;

//import java.io.IOException;
//import java.net.InetAddress;
//import java.net.InetSocketAddress;
//import java.net.Socket;
//import java.nio.ByteBuffer;
//import java.nio.channels.SocketChannel;
//import java.util.concurrent.ConcurrentHashMap;

public class Factory {
//	private static ConcurrentHashMap<String, SocketManager> sockets = new ConcurrentHashMap<String, SocketManager>();
	
//	public static void connectToServer(String host, int port) {
//		try {
//			// The address object
//			InetSocketAddress address = new InetSocketAddress(host, port);
//			// The actual connection object
//			SocketChannel channel = SocketChannel.open();
//			channel.configureBlocking(false);
//			// The socket object
//			Socket socket = channel.socket();
//			socket.setReceiveBufferSize(1024*1024*2);
//			socket.setSendBufferSize(1024*1024*2);
//			socket.setTcpNoDelay(true);
//			// Now connect
//			channel.connect(address);
//			
//			InetAddress.getLocalHost();
//			
//			String s = new String("hello");
//			byte[] b = s.getBytes();
//			String s2 = new String(b);
//			
//			ByteBuffer buffer = ByteBuffer.wrap(b);
//			int len = channel.write(buffer);
//			
//			while (!channel.finishConnect()) {
//				try {
//					Thread.sleep(100);
//				} catch (InterruptedException e) {
//					e.printStackTrace();
//				}
//			}
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
//	}
	
//	public static void startServer() {
//		
//	}
}